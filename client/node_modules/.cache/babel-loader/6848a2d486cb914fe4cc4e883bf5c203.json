{"ast":null,"code":"import axios from 'axios';\nimport { GET_TECHS, ADD_TECH, TECHS_ERROR, SET_LOADING, DELETE_TECH, CLEAR_ERROR } from './types';\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/techs/');\n    const resData = await res.json();\n    dispatch({\n      type: GET_TECHS,\n      payload: resData\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR // payload: err.response.data.msg\n\n    });\n  }\n}; // Add tech\n\nexport const addTech = newTech => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/techs/', newTech, config);\n    const resData = await res.json();\n    console.log(resData);\n    dispatch({\n      type: ADD_TECH,\n      payload: resData\n    });\n  } catch (err) {\n    console.log(err.response.data.msg);\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.data.msg\n    });\n  }\n}; // export const addTech = (newTech) => async (dispatch) => {\n//   try {\n//     const res = await fetch('/api/techs/', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(newTech)\n//     });\n//     const resData = await res.json();\n//     console.log(resData);\n//     dispatch({\n//       type: ADD_TECH,\n//       payload: resData\n//     })\n//   } catch(err){\n//     console.log(err.response);\n//     dispatch({\n//       type: TECHS_ERROR,\n//       payload: err.response.data.msg\n//     })\n//   }\n// }\n// Delete Tech\n\nexport const deleteTech = id => async dispatch => {\n  try {\n    await fetch(`/api/techs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR // payload: err.response.data.msg\n\n    });\n  }\n};\nexport const setLoading = () => dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n};\nexport const clearError = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};","map":{"version":3,"sources":["/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/actions/techActions.js"],"names":["axios","GET_TECHS","ADD_TECH","TECHS_ERROR","SET_LOADING","DELETE_TECH","CLEAR_ERROR","getTechs","dispatch","setLoading","res","fetch","resData","json","type","payload","err","addTech","newTech","config","headers","post","console","log","response","data","msg","deleteTech","id","method","clearError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAEEC,SAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,WAPF,QAQO,SARP;AAYA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAEhD,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,CAAvB;AAEA,UAAMC,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEb,SADC;AAEPc,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAKD,GAZD,CAYE,OAAOI,GAAP,EAAY;AAEZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,WADC,CAEP;;AAFO,KAAD,CAAR;AAKD;AAEF,CAvBM,C,CAyBP;;AACA,OAAO,MAAMc,OAAO,GAAIC,OAAD,IAAa,MAAOV,QAAP,IAAoB;AACtD,QAAMW,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAG;AAAC,sBAAgB;AAAjB;AADG,GAAf;;AAIA,MAAI;AACF,UAAMV,GAAG,GAAG,MAAMV,KAAK,CAACqB,IAAN,CAAW,aAAX,EAA0BH,OAA1B,EAAmCC,MAAnC,CAAlB;AAEA,UAAMP,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AAEAJ,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,QADC;AAEPa,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAKD,GAZD,CAYE,OAAOI,GAAP,EAAY;AAEZM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACQ,QAAJ,CAAaC,IAAb,CAAkBC,GAA9B;AACAlB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEC,GAAG,CAACQ,QAAJ,CAAaC,IAAb,CAAkBC;AAFpB,KAAD,CAAR;AAKD;AAEF,CA3BM,C,CA6BP;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ,MAAOpB,QAAP,IAAmB;AAEnD,MAAG;AACD,UAAMG,KAAK,CAAE,cAAaiB,EAAG,EAAlB,EAAqB;AAC9BC,MAAAA,MAAM,EAAE;AADsB,KAArB,CAAX;AAIArB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEa;AAFF,KAAD,CAAR;AAKD,GAVD,CAUC,OAAMZ,GAAN,EAAU;AAETR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,WADC,CAEP;;AAFO,KAAD,CAAR;AAKD;AACF,CApBM;AAsBP,OAAO,MAAMM,UAAU,GAAG,MAAOD,QAAD,IAAc;AAE5CA,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEV;AADC,GAAD,CAAR;AAGD,CALM;AAQP,OAAO,MAAM0B,UAAU,GAAG,MAAOtB,QAAD,IAAa;AAE3CA,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAACR;AADE,GAAD,CAAR;AAGD,CALM","sourcesContent":["import axios from 'axios';\n\n\nimport {\n\n  GET_TECHS,\n  ADD_TECH,\n  TECHS_ERROR,\n  SET_LOADING,\n  DELETE_TECH,\n  CLEAR_ERROR\n} from './types';\n\n\n\nexport const getTechs = () => async (dispatch) => {\n\n  try {\n    setLoading();\n\n    const res = await fetch('/api/techs/');\n\n    const resData = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: resData\n    });\n\n  } catch (err) {\n\n    dispatch({\n      type: TECHS_ERROR,\n      // payload: err.response.data.msg\n    })\n\n  }\n\n}\n\n// Add tech\nexport const addTech = (newTech) => async (dispatch) => {\n  const config = {\n    headers : {'Content-Type': 'application/json'}\n  }\n\n  try {\n    const res = await axios.post('/api/techs/', newTech, config );\n\n    const resData = await res.json();\n\n    console.log(resData);\n\n    dispatch({\n      type: ADD_TECH,\n      payload: resData\n    })\n\n  } catch (err) {\n\n    console.log(err.response.data.msg);\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.data.msg\n    })\n\n  }\n\n}\n\n// export const addTech = (newTech) => async (dispatch) => {\n\n//   try {\n//     const res = await fetch('/api/techs/', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(newTech)\n//     });\n\n//     const resData = await res.json();\n\n//     console.log(resData);\n\n//     dispatch({\n//       type: ADD_TECH,\n//       payload: resData\n//     })\n\n//   } catch(err){\n\n//     console.log(err.response);\n//     dispatch({\n//       type: TECHS_ERROR,\n//       payload: err.response.data.msg\n//     })\n\n//   }\n\n// }\n\n// Delete Tech\nexport const deleteTech = (id) => async (dispatch)=> {\n\n  try{\n    await fetch(`/api/techs/${id}`, {\n      method: 'DELETE'\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n\n  }catch(err){\n\n    dispatch({\n      type: TECHS_ERROR,\n      // payload: err.response.data.msg\n    })\n\n  }\n}\n\nexport const setLoading = () => (dispatch) => {\n\n  dispatch({\n    type: SET_LOADING\n  })\n}\n\n\nexport const clearError = () => (dispatch)=> {\n  \n  dispatch({\n    type:CLEAR_ERROR\n  });\n}"]},"metadata":{},"sourceType":"module"}