{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/techs/TechListModal.js\";\nimport React, { useEffect } from 'react';\nimport TechItem from './TechItem';\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechListModal = props => {\n  const {\n    techs,\n    loading\n  } = props.tech;\n  const {\n    getTechs\n  } = props;\n  useEffect(() => {\n    getTechs(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"tech-list-modal\",\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Technician List\"), React.createElement(\"ul\", {\n    className: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !loading && techs !== null && techs.map(tech => React.createElement(TechItem, {\n    key: tech._id,\n    tech: tech,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n};\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechListModal);","map":{"version":3,"sources":["/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/techs/TechListModal.js"],"names":["React","useEffect","TechItem","PropTypes","connect","getTechs","TechListModal","props","techs","loading","tech","map","_id","mapStateToProps","state","propTypes","object","isRequired","func","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAIA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,KAAK,CAACG,IAAjC;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAeE,KAArB;AAGAN,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAA0B,IAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACI,OAAD,IAAYD,KAAK,KAAK,IAAtB,IAA8BA,KAAK,CAACG,GAAN,CAAUD,IAAI,IAAK,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACE,GAApB;AAAyB,IAAA,IAAI,EAAEF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CADjC,CAFF,CADF,CADF;AAUD,CArBD;;AAuBA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,IAAI,EAAEI,KAAK,CAACJ;AADsB,CAAZ,CAAxB;;AAIAJ,aAAa,CAACS,SAAd,GAA0B;AACxBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADC;AAExBZ,EAAAA,QAAQ,EAAEF,SAAS,CAACe,IAAV,CAAeD,UAFD;AAGxBR,EAAAA,OAAO,EAAEN,SAAS,CAACgB;AAHK,CAA1B;AAMA,eAAef,OAAO,CAACS,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,aAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport TechItem from './TechItem';\nimport PropTypes from 'prop-types'\n\n\n\n// Redux\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\n\n\nconst TechListModal = (props) => {\n\n  const { techs, loading } = props.tech;\n  const { getTechs } = props;\n\n\n  useEffect(() => {\n    getTechs()\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id='tech-list-modal' className='modal'>\n      <div className=\"modal-content\">\n        <h4>Technician List</h4>\n        <ul className=\"collection\">\n          {!loading && techs !== null && techs.map(tech => (<TechItem key={tech._id} tech={tech} />))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech\n})\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n}\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n"]},"metadata":{},"sourceType":"module"}