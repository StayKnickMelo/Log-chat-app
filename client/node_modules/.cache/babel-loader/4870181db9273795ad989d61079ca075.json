{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/logs/EditLogModel.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport M from 'materialize-css';\nimport PropTypes from 'prop-types';\nimport TechOptions from '../techs/TechOptions'; // Redux\n\nimport { connect } from 'react-redux';\nimport { updateLog } from '../../actions/logActions';\nimport { clearCurrent } from '../../actions/logActions';\n\nconst EditLogModel = props => {\n  const {\n    current\n  } = props;\n  const {\n    updateLog\n  } = props;\n  const {\n    clearCurrent\n  } = props;\n  const [log, setLog] = useState({\n    message: '',\n    tech: ''\n  });\n  const input = useRef();\n  useEffect(() => {\n    if (current) {\n      setLog({\n        message: current.message,\n        tech: current.tech\n      });\n      setAttention(current.attention);\n      input.current.focus();\n    } //eslint-disable-next-line\n\n  }, [current]);\n  const {\n    message,\n    tech\n  } = log;\n  const [attention, setAttention] = useState(false);\n\n  const onChange = e => {\n    setLog({ ...log,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please fill in all fields'\n      });\n    } else {\n      updateLog(current._id, {\n        tech,\n        message,\n        attention\n      });\n      clearCurrent();\n      setLog({\n        message: '',\n        tech: ''\n      });\n      setAttention(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"edit-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Enter System Log\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: input,\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"active\",\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Log Message\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"browser-default\",\n    name: \"tech\",\n    value: tech,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Select Technician\"), React.createElement(TechOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"filled-in\",\n    type: \"checkbox\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Needs Attention\")))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"modal-close waves-effect blue btn\",\n    href: \"#!\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Enter\")));\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nEditLogModel.propTypes = {\n  updateLog: PropTypes.func.isRequired,\n  clearCurrent: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  updateLog,\n  clearCurrent\n})(EditLogModel);","map":{"version":3,"sources":["/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/logs/EditLogModel.js"],"names":["React","useState","useEffect","useRef","M","PropTypes","TechOptions","connect","updateLog","clearCurrent","EditLogModel","props","current","log","setLog","message","tech","input","setAttention","attention","focus","onChange","e","target","name","value","onSubmit","toast","html","_id","modalStyle","width","height","mapStateToProps","state","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport M from 'materialize-css';\nimport PropTypes from 'prop-types';\nimport TechOptions from '../techs/TechOptions';\n\n\n// Redux\nimport { connect } from 'react-redux';\nimport {updateLog} from '../../actions/logActions';\nimport {clearCurrent} from '../../actions/logActions';\n\n\n\n\nconst EditLogModel = (props) => {\n\n  const { current } = props;\n  const {updateLog} = props;\n  const {clearCurrent} = props;\n\n  const [log, setLog] = useState({\n    message: '',\n    tech: ''\n  });\n\n  const input = useRef()\n\n  useEffect(() => {\n\n    if (current) {\n      setLog({\n        message: current.message,\n        tech: current.tech\n      });\n\n      setAttention(current.attention);\n\n      input.current.focus();\n\n    }\n    //eslint-disable-next-line\n  },[current])\n\n  \n\n\n  const { message, tech } = log;\n\n  const [attention, setAttention] = useState(false);\n\n\n  const onChange = (e) => {\n    setLog({ ...log, [e.target.name]: e.target.value });\n\n  }\n\n  const onSubmit = () => {\n\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please fill in all fields' });\n    } else {\n\n      updateLog(current._id, {tech, message, attention});\n      clearCurrent();\n\n      setLog({\n        message: '',\n        tech: ''\n      });\n\n      setAttention(false);\n    }\n  }\n\n\n\n  return (\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input ref={input} type=\"text\" name=\"message\" value={message} onChange={onChange} />\n            <label className='active' htmlFor=\"message\">Log Message</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select className='browser-default' name=\"tech\" value={tech} onChange={onChange}>\n              <option value=\"\" disabled>Select Technician</option>\n              <TechOptions/>\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input className=\"filled-in\" type=\"checkbox\" checked={attention} value={attention} onChange={(e) => setAttention(!attention)} />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a className=\"modal-close waves-effect blue btn\" href=\"#!\" onClick={onSubmit} >Enter</a>\n      </div>\n    </div>\n\n  )\n}\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n}\n\nconst mapStateToProps = (state) => ({\n  current: state.log.current\n\n});\n\nEditLogModel.propTypes = {\n  updateLog: PropTypes.func.isRequired,\n  clearCurrent: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, {updateLog, clearCurrent})(EditLogModel)\n"]},"metadata":{},"sourceType":"module"}