{"ast":null,"code":"import { GET_TECHS, TECHS_ERROR, SET_LOADING, ADD_TECH, DELETE_TECH, CLEAR_ERROR } from \"../actions/types\";\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\n\nconst techReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return { ...state,\n        techs: action.payload,\n        loading: false\n      };\n\n    case ADD_TECH:\n      return { ...state,\n        techs: [...state.techs, action.payload]\n      };\n\n    case DELETE_TECH:\n      return { ...state,\n        techs: state.techs.filter(tech => tech._id !== action.payload)\n      };\n\n    case TECHS_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case CLEAR_ERROR:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default techReducer;","map":{"version":3,"sources":["/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/reducers/techReducer.js"],"names":["GET_TECHS","TECHS_ERROR","SET_LOADING","ADD_TECH","DELETE_TECH","CLEAR_ERROR","initialState","techs","loading","error","techReducer","state","action","type","payload","filter","tech","_id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,EAA8CC,QAA9C,EAAwDC,WAAxD,EAAqEC,WAArE,QAAwF,kBAAxF;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,SAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFT;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBK,MAAM,CAACE,OAAxB;AAFF,OAAP;;AAIF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA/C;AAFF,OAAP;;AAIF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF;AACE,aAAOE,KAAP;AAjCJ;AAmCD,CArCD;;AAwCA,eAAeD,WAAf","sourcesContent":["import { GET_TECHS, TECHS_ERROR, SET_LOADING, ADD_TECH, DELETE_TECH, CLEAR_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n}\n\nconst techReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false\n      }\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload]\n      }\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter(tech => tech._id !== action.payload)\n      }\n    case TECHS_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      }\n    default:\n      return state\n  }\n}\n\n\nexport default techReducer;"]},"metadata":{},"sourceType":"module"}