{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/logs/Logs.js\";\nimport React, { useEffect } from 'react';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = props => {\n  const {\n    logs,\n    loading,\n    filtered\n  } = props.log;\n  const {\n    getLogs\n  } = props;\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"System Logs\")), filtered ? filtered.map(log => React.createElement(LogItem, {\n    key: log._id,\n    log: log,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })) : !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"No Logs to Show...\") : logs.map(log => React.createElement(LogItem, {\n    key: log._id,\n    log: log,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/logs/Logs.js"],"names":["React","useEffect","LogItem","Preloader","PropTypes","connect","getLogs","Logs","props","logs","loading","filtered","log","map","_id","length","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAGtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAA4BH,KAAK,CAACI,GAAxC;AACA,QAAM;AAACN,IAAAA;AAAD,MAAYE,KAAlB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AAEdK,IAAAA,OAAO,GAFO,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAQA,MAAII,OAAO,IAAID,IAAI,KAAK,IAAxB,EAA8B;AAC5B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIGE,QAAQ,GACNA,QAAQ,CAACE,GAAT,CAAaD,GAAG,IAAK,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACE,GAAlB;AAAuB,IAAA,GAAG,EAAEF,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADM,GACwD,CAACF,OAAD,IAAYD,IAAI,CAACM,MAAL,KAAgB,CAA5B,GAAiC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjC,GAC5DN,IAAI,CAACI,GAAL,CAASD,GAAG,IAAK,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACE,GAAlB;AAAuB,IAAA,GAAG,EAAEF,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,CANP,CADF;AAUD,CA5BD;;AA8BA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,GAAG,EAAEK,KAAK,CAACL;AADuB,CAAZ,CAAxB;;AAIAL,IAAI,CAACW,SAAL,GAAiB;AACfN,EAAAA,GAAG,EAAER,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEfd,EAAAA,OAAO,EAAEF,SAAS,CAACiB,IAAV,CAAeD;AAFT,CAAjB;AAKA,eAAef,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAAoCC,IAApC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types'\n\n\nimport { connect } from 'react-redux';\nimport {getLogs} from '../../actions/logActions';\n\n\nconst Logs = (props) => {\n\n\n  const {logs, loading, filtered} = props.log;\n  const {getLogs} = props\n\n  useEffect(() => {\n\n    getLogs();\n    //eslint-disable-next-line\n  }, []);\n\n \n\n  if (loading || logs === null) {\n    return <Preloader />\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n      {filtered ? \n        (filtered.map(log => (<LogItem key={log._id} log={log} />))) : !loading && logs.length === 0 ? (<p className='center'>No Logs to Show...</p>) :\n          (logs.map(log => (<LogItem key={log._id} log={log} />))) }\n    </ul>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  log: state.log\n});\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, {getLogs})(Logs);\n\n"]},"metadata":{},"sourceType":"module"}