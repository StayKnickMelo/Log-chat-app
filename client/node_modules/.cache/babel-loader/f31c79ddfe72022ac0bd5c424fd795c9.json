{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/logs/AddLogModal.js\";\nimport React, { useState } from 'react';\nimport M from 'materialize-css';\nimport PropTypes from 'prop-types';\nimport TechOptions from '../techs/TechOptions'; // Redux\n\nimport { connect } from 'react-redux';\nimport { addLog } from '../../actions/logActions';\n\nconst AddLogModal = props => {\n  const {\n    addLog\n  } = props;\n  const {\n    logs\n  } = props;\n  const [log, setLog] = useState({\n    message: '',\n    tech: ''\n  });\n  const {\n    message,\n    tech\n  } = log;\n  const [attention, setAttention] = useState(false);\n\n  const onChange = e => {\n    setLog({ ...log,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please enter a message and tech'\n      });\n    } else {\n      const idNum = logs.length + 1;\n      console.log(idNum);\n      addLog({\n        message,\n        tech,\n        attention,\n        date: new Date(),\n        idNum\n      });\n      M.toast({\n        html: `Log Added by ${tech}`\n      });\n      setLog({\n        message: '',\n        tech: ''\n      });\n      setAttention(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"add-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Enter System Log\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"active\",\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Log Message\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"browser-default\",\n    name: \"tech\",\n    value: tech,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Select Technician\"), React.createElement(TechOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"filled-in\",\n    type: \"checkbox\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Needs Attention\")))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"modal-close waves-effect blue btn\",\n    href: \"#!\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Enter\")));\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // techs: state.tech.techs,\n  logs: state.log.logs\n});\n\nexport default connect(mapStateToProps, {\n  addLog\n})(AddLogModal);","map":{"version":3,"sources":["/Users/macbookpro/REACT/TECH LOG HEROKU DEPLOYMENT/client/src/components/logs/AddLogModal.js"],"names":["React","useState","M","PropTypes","TechOptions","connect","addLog","AddLogModal","props","logs","log","setLog","message","tech","attention","setAttention","onChange","e","target","name","value","onSubmit","toast","html","idNum","length","console","date","Date","modalStyle","width","height","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport M from 'materialize-css';\nimport PropTypes from 'prop-types';\n\nimport TechOptions from '../techs/TechOptions';\n\n\n// Redux\nimport { connect } from 'react-redux';\nimport { addLog } from '../../actions/logActions';\n\n\nconst AddLogModal = (props) => {\n\n  const { addLog } = props;\n  const {logs} = props;\n  \n  const [log, setLog] = useState({\n    message: '',\n    tech: ''\n  });\n\n  const { message, tech } = log;\n\n  const [attention, setAttention] = useState(false)\n\n  const onChange = (e) => {\n\n    setLog({ ...log, [e.target.name]: e.target.value });\n\n  }\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and tech' });\n\n    } else {\n\n      const idNum = logs.length + 1;\n      console.log(idNum);\n\n      addLog({ message, tech, attention, date: new Date(), idNum });\n      M.toast({ html: `Log Added by ${tech}` });\n\n      setLog({\n        message: '',\n        tech: ''\n      })\n\n      setAttention(false)\n    }\n\n  }\n\n\n  return (\n    <div id='add-log-modal' className='modal' style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"message\" value={message} onChange={onChange} />\n            <label className='active' htmlFor=\"message\">Log Message</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select className='browser-default' name=\"tech\" value={tech} onChange={onChange}>\n              <option value=\"\" disabled>Select Technician</option>\n              <TechOptions/>\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input className=\"filled-in\" type=\"checkbox\" checked={attention} value={attention} onChange={(e) => setAttention(!attention)} />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a className=\"modal-close waves-effect blue btn\" href=\"#!\" onClick={onSubmit} >Enter</a>\n      </div>\n    </div>\n  )\n}\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n}\n\n\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  // techs: state.tech.techs,\n  logs: state.log.logs\n})\n\n\nexport default connect(mapStateToProps, { addLog })(AddLogModal)\n"]},"metadata":{},"sourceType":"module"}